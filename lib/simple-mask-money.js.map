{"version":3,"file":"simple-mask-money.js","sources":["../src/args.js","../src/core.js","../src/implanter.js","../src/index.js"],"sourcesContent":["module.exports = class Args {\n  constructor(args) {\n    this.allowNegative       = false;    \n    this.negativeSignAfter   = false;\n    this.decimalSeparator    = ',';\n    this.fixed               = true;\n    this.fractionDigits      = 2;\n    this.prefix              = '';\n    this.suffix              = '';\n    this.thousandsSeparator  = '.';\n    this.cursor              = 'move';\n\n    this.merge(args);\n  }\n\n  merge(args) {\n    if (!args || typeof args !== 'object') return;\n\n    this.fixed               = typeof args.fixed             === 'boolean' ? args.fixed             : this.fixed;\n    this.allowNegative       = typeof args.allowNegative     === 'boolean' ? args.allowNegative     : this.allowNegative;    \n    this.negativeSignAfter   = typeof args.negativeSignAfter === 'boolean' ? args.negativeSignAfter : this.negativeSignAfter;\n\n    this.decimalSeparator    = typeof args.decimalSeparator   === 'undefined' ? this.decimalSeparator   : args.decimalSeparator;\n    this.fractionDigits      = typeof args.fractionDigits     === 'undefined' ? this.fractionDigits     : args.fractionDigits;\n    this.prefix              = typeof args.prefix             === 'undefined' ? this.prefix             : args.prefix;\n    this.suffix              = typeof args.suffix             === 'undefined' ? this.suffix             : args.suffix;\n    this.thousandsSeparator  = typeof args.thousandsSeparator === 'undefined' ? this.thousandsSeparator : args.thousandsSeparator;\n    this.cursor              = typeof args.cursor             === 'undefined' ? this.cursor             : args.cursor;\n  }\n};\n","const Args = require('./args');\nmodule.exports = class Core {\n  constructor(args) {\n    this.args = new Args(args);\n  }\n\n  isFloat(number) {\n    return number % 1 !== 0;\n  }\n\n  completer(size = 1) {\n    return this.args.fixed ? ''.padEnd(size, '0') : ''.padEnd(size, '_');\n  }\n\n  emptyOrInvalid() {\n    return `${this.completer()}${this.args.decimalSeparator}${this.completer(this.args.fractionDigits)}`;\n  }\n\n  onlyNumberInput(value, permitNonFixed = true) {\n    const hasDecimalSeparator = value.toString().indexOf(this.args.decimalSeparator);\n    const completer = this.completer();\n    let putDecimalSeparator = false;\n    let retorno = '';\n    for (let i = value.length - 1; i >= 0; i--) {\n      if (isFinite(value[i]) || (!this.args.fixed && value[i] === completer)) {\n        retorno = (isFinite(value[i]) ? value[i] : (permitNonFixed ? value[i] : '0')) + retorno;\n      } else if (hasDecimalSeparator !== -1 && !putDecimalSeparator && value[i] === this.args.decimalSeparator && retorno.length >= this.args.fractionDigits) {\n        retorno = value[i].replace(this.args.decimalSeparator, '.') + retorno;\n        putDecimalSeparator = true;\n      }\n    }\n\n    retorno = this.checkNumberStart(retorno);\n\n    return retorno;\n  }\n\n  onlyNumber(value, permitNonFixed = true) {\n    const hasDecimalSeparator = value.toString().indexOf(this.args.decimalSeparator);\n    const completer = this.completer();\n    let putDecimalSeparator = false;\n    let retorno = '';\n    for (let i = value.length - 1; i >= 0; i--) {\n      if (isFinite(value[i]) || (!this.args.fixed && value[i] === completer)) {\n        retorno = (isFinite(value[i]) ? value[i] : (permitNonFixed ? value[i] : '0')) + retorno;\n      } else if (hasDecimalSeparator !== -1 && !putDecimalSeparator && value[i] === this.args.decimalSeparator) {\n        retorno = value[i].replace(this.args.decimalSeparator, '.') + retorno;\n        putDecimalSeparator = true;\n      }\n    }\n\n    retorno = this.checkNumberStart(retorno);\n\n    return retorno;\n  }\n\n\n  isNumberNonFixed(value) {\n    return !isNaN(value.replace(new RegExp('\\\\_', 'g'), ''));\n  }\n\n  addingPrefix(value) {\n    return `${this.args.prefix}${value}`;\n  }\n\n  removingPrefix(value) {\n    if (value.indexOf(this.args.prefix, 0) === -1) return value;\n    return value.substring(this.args.prefix.length, value.length);\n  }\n\n  addingSuffix(value) {\n    return `${value}${this.args.suffix}`;\n  }\n\n  removingSuffix(value) {\n    const start = value.length - this.args.suffix.length - 1;\n    if (value.indexOf(this.args.suffix, start) === -1) return value;\n    return value.substring(0, value.length - this.args.suffix.length - 1);\n  }\n\n  addingCompleter(value, completer, length, start = true) {\n    while (value.length < length) {\n      value = start ? `${completer}${value}` : `${value}${completer}`;\n    }\n\n    return value;\n  }\n\n  removingCompleter(value, completer, start = true) {\n    let retorno = value.toString();\n    let position = start ? 0 : retorno.length - 1;\n\n    while (retorno[position] === completer) {\n      retorno = retorno.substring(0, position - 1) + retorno.substring(position + 1);\n      position = start ? 0 : retorno.length - 1;\n    }\n\n    return retorno;\n  }\n\n  addingSeparators(value) {\n    let size = value.length - this.args.fractionDigits;\n    let character = this.args.fixed ? 'd' : 'w';\n    let regexp = `\\\\,?||\\\\.?(\\\\${character})`;\n    let hundreds = Math.ceil(size / 3);\n\n    let replacement = `${this.args.decimalSeparator}$${hundreds + 1}`;\n\n    for (let i = hundreds; i !== 0; i--) {\n      if (size >= 3) {\n        regexp = `(\\\\${character}{3})${regexp}`;\n        size -= 3;\n      } else {\n        regexp = `(\\\\${character}{${size}})${regexp}`;\n      }\n\n      if (i > 1) {\n        replacement = `${this.args.thousandsSeparator}$${i}${replacement}`;\n      } else {\n        replacement = `$${i}${replacement}`;\n      }\n    }\n\n    return value.replace(new RegExp(regexp), replacement);\n  }\n\n  replaceSeparator(value, separator, replacer = '') {\n    return value.replace(new RegExp(`\\\\${separator}`, 'g'), replacer);\n  }\n\n  adjustDotPosition(value) {\n    let fractionDigits;\n    let retorno = value.toString();\n\n    retorno = retorno.replace('.', '');\n    fractionDigits = retorno.length - this.args.fractionDigits;\n    retorno = `${retorno.substring(0, fractionDigits)}.${retorno.substring(fractionDigits)}`;\n\n    return retorno;\n  }\n\n  checkNumberStart(value) {\n    let retorno = value.toString();\n    const completer = this.completer();\n\n    switch (retorno[0]) {\n      case '.':\n        retorno = `${completer}${retorno}`;\n        break;\n\n      case completer:\n        retorno = this.removingCompleter(retorno, this.completer());\n        retorno = `${completer}${retorno}`;\n        break;\n    }\n\n    return retorno;\n  }\n\n  textToNumber(value, input, permitNonFixed = true) {\n    let retorno = value.toString();\n    let completer = this.completer();\n\n    if (this.args.prefix) {\n      retorno = this.removingPrefix(retorno);\n    }\n\n    if (this.args.suffix) {\n      retorno = this.removingSuffix(retorno);\n    }\n\n    retorno = this.onlyNumber(retorno, permitNonFixed);\n\n    if (retorno) {\n      if (input && permitNonFixed && retorno.indexOf('.') !== -1) {\n        retorno = this.adjustDotPosition(retorno);\n      }\n\n      retorno = this.removingCompleter(retorno, completer);\n\n      retorno = this.checkNumberStart(retorno);\n    }\n\n    return retorno || (this.args.fixed ? '0' : '');\n  }\n\n  numberToText(value) {\n    let retorno = this.emptyOrInvalid();\n    value = this.replaceSeparator(value.toString(), this.args.decimalSeparator, '.');\n\n    if (!isNaN(value) || (!this.args.fixed && this.isNumberNonFixed(value))) {\n      if (this.isFloat(value)) {\n        const number = value.split('.');\n        let hundreds = number[0];\n        let decimals = number[1];\n\n        decimals = this.addingCompleter(decimals || '', this.completer(), this.args.fractionDigits, false);\n\n        retorno = `${hundreds}${decimals}`;\n      } else {\n        retorno = this.replaceSeparator(value, '.');\n        retorno = this.addingCompleter(retorno || '', this.completer(), this.args.fractionDigits);\n        retorno = this.args.fractionDigits >= retorno.length ? `${this.completer()}${retorno}` : retorno;\n      }\n\n      retorno = this.addingSeparators(retorno);\n      retorno = this.checkNumberStart(retorno);\n    }\n\n    if (this.args.prefix) {\n      retorno = this.addingPrefix(retorno);\n    }\n    if (this.args.suffix) {\n      retorno = this.addingSuffix(retorno);\n    }\n\n    return retorno;\n  }\n};\n","module.exports = {\n  getCaretPosition(input) {\n    let position = -1;\n    if ('selectionStart' in input) {\n      position = input.selectionStart;\n    } else if (document.selection) {\n      input.focus();\n      const range = document.selection.createRange();\n      const length = document.selection.createRange().text.length;\n      range.moveStart('character', -input.value.length);\n      position = range.text.length - length;\n    }\n    return position;\n  },\n\n  setCaretPosition(input, index) {\n    if (input.setSelectionRange) {\n      input.focus();\n      input.setSelectionRange(index, index);\n    } else if (input.createTextRange) {\n      const range = input.createTextRange();\n      range.collapse(true);\n      range.moveEnd('character', index);\n      range.moveStart('character', index);\n      range.select();\n    }\n  },\n\n  indexMove(newValue, oldValue) {\n    let move;\n    switch (true) {\n      case oldValue.length < newValue.length:\n        move = - 1;\n        break;\n      case oldValue.length > newValue.length:\n        move = 1;\n        break;\n      default:\n        move = 0;\n        break;\n    }\n    return move;\n  }\n};\n","const Args = require('./args');\r\nconst Core = require('./core');\r\nconst implanter = require('./implanter');\r\n\r\nlet _args = new Args();\r\nlet _core = new Core(_args);\r\n\r\nmodule.exports = class SimpleMaskMoney {\r\n  static get args() {\r\n    return _args;\r\n  }\r\n\r\n  static set args(value) {\r\n    _args = new Args(value);\r\n    _core = new Core(_args);\r\n  }\r\n\r\n  static format(value, args, input = false) {\r\n    const _arguments = new Args(Object.assign({}, _args, args));\r\n    _core = new Core(_arguments);\r\n\r\n    const negative = _arguments.allowNegative && value.indexOf('-') !== -1;  \r\n    const formatation = _core.numberToText(_core.textToNumber(value, input));\r\n\r\n    return `${!_arguments.negativeSignAfter && negative ? '-': ''}${formatation}${_arguments.negativeSignAfter && negative ? '-': ''}`;\r\n  }\r\n\r\n  static formatToNumber(input, args) {\r\n    const _arguments = new Args(Object.assign({}, _args, args));\r\n    _core = new Core(_arguments);\r\n\r\n    let value = input.toString(); \r\n    let retorno = '0';\r\n    const negative = _arguments.allowNegative && value.indexOf('-') !== -1;   \r\n    \r\n    if (negative) {\r\n      value = value.replace('-', '');\r\n    }\r\n\r\n    value = _core.textToNumber(value, true, false);\r\n    if (!isNaN(parseFloat(value))) {\r\n      retorno = value;\r\n    }\r\n      \r\n    return parseFloat(negative ? retorno * -1 : retorno);\r\n  }\r\n\r\n  static setMask(element, args) {\r\n    if (typeof document === 'undefined') throw 'This function only works on client side';\r\n\r\n    \r\n    const input = typeof element == 'string' ? document.querySelector(element) : element;    \r\n    const _arguments = new Args(Object.assign({}, _args, args));\r\n    input.maskArgs = _arguments;\r\n    input.dispatch = true;\r\n    \r\n    input.addEventListener('input', e => {\r\n      const oldValue = input.value;\r\n      const newValue = SimpleMaskMoney.format(oldValue, input.maskArgs, true);\r\n      const caretPosition = implanter.getCaretPosition(input);\r\n      const move = implanter.indexMove(newValue, oldValue);\r\n      let newCaretPosition = caretPosition - move;\r\n      const {cursor} = input.maskArgs;\r\n      \r\n      if (cursor === 'start') {\r\n        newCaretPosition = 0;\r\n      } else if (cursor === 'end') {\r\n        newCaretPosition = newValue.length;\r\n      }\r\n\r\n      input.value = newValue;\r\n      input._value = newValue;\r\n      input.dispatch = !input.dispatch;\r\n\r\n      implanter.setCaretPosition(input, newCaretPosition);\r\n\r\n      (e instanceof Event) && !input.dispatch && input.dispatchEvent(new Event('input'));\r\n    });\r\n\r\n    input.formatToNumber = () => SimpleMaskMoney.formatToNumber(input.value, input.maskArgs);\r\n\r\n    return input;\r\n  }\r\n};\r\n"],"names":["module","args","allowNegative","negativeSignAfter","decimalSeparator","fixed","fractionDigits","prefix","suffix","thousandsSeparator","cursor","merge","Args","number","size","padEnd","completer","value","permitNonFixed","hasDecimalSeparator","toString","indexOf","putDecimalSeparator","retorno","i","length","isFinite","replace","checkNumberStart","isNaN","RegExp","substring","start","position","character","regexp","hundreds","Math","ceil","replacement","separator","replacer","removingCompleter","input","removingPrefix","removingSuffix","onlyNumber","adjustDotPosition","emptyOrInvalid","replaceSeparator","isNumberNonFixed","isFloat","split","decimals","addingCompleter","addingSeparators","addingPrefix","addingSuffix","selectionStart","document","selection","focus","range","createRange","text","moveStart","index","setSelectionRange","createTextRange","collapse","moveEnd","select","newValue","oldValue","move","_args","_core","Core","_arguments","Object","assign","negative","formatation","numberToText","textToNumber","parseFloat","element","querySelector","maskArgs","dispatch","addEventListener","SimpleMaskMoney","format","caretPosition","implanter","getCaretPosition","indexMove","newCaretPosition","_value","setCaretPosition","Event","dispatchEvent","formatToNumber"],"mappings":"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"}